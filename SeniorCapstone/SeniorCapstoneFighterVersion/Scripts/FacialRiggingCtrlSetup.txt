string $sel_curves[] = `ls -sl`;  //gets curves selected by user.  Assume naming convention of curve_itemIdentifier.
int $numOfLocators = 3;  //declare variable for how many locators per curve we'll be using
int $i = 0; //declare variable for for loops.
string $locatorRename; //variable to store the rename of the locator.
string $curveStrip = "curve_"; //itentify part of curve name to strip to get locationName
string $locationName; //create locationName variable to identify where on the face this curve is.
string $mpRename; //string to hold motion path renaming.
float $locPos; //float to accomodate locator position.

for ($each in $sel_curves){
    	print $each; //print each string to verify it's working.
	for ($i = 0; $i < $numOfLocators; $i++){
		
		$locationName = stripPrefixFromName($curveStrip , $each); //strip curve part off of curve name
		
		$locatorRename = ("locator_" + $locationName + $i); //set rename for the locators
		spaceLocator -name $locatorRename -p 0 0 0; //create 3 locators at 0,0,0 to begin rigging process.
		
		select -r $locatorRename;
		select -add $each;//select locator then curve.
		
		$mpRename = "motionPath_" + $locationName + $i;  //setmotionPathRename
		pathAnimation -name $mpRename -fractionMode true -follow true -followAxis x -upAxis y -worldUpType "vector" -worldUpVector 0 1 0 -inverseUp false -inverseFront false -bank false -startTimeU `playbackOptions -query -minTime` -endTimeU  `playbackOptions -query -maxTime`;
		select -addFirst $mpRename;
		disconnectAttr ($mpRename + "_uValue*.output") ($mpRename + ".uValue");
		$locPos = float($i) / 2;
		setAttr ($mpRename + ".uValue") $locPos; //break connections for locator then set it in it's proper place on the path.
		CBdeleteConnection ($locatorRename + ".rx");
		CBdeleteConnection ($locatorRename + ".ry");
		CBdeleteConnection ($locatorRename + ".rz");
		setAttr ($locatorRename + ".rotateX") 0;
		setAttr ($locatorRename + ".rotateY") 0;
		setAttr ($locatorRename + ".rotateZ") 0; //break rotational connections and set them to 0.
		
	}
}